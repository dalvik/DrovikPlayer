apply plugin: 'com.android.application'

import java.util.regex.Pattern

def releaseTime() {
    return new Date().format("yyyyMMddHHmmss", TimeZone.getTimeZone("GMT+08:00"))
}

def getVersionName() {
    def manifestText = file("src/main/AndroidManifest.xml")
    def patternVersionNumber = Pattern.compile("versionName=\"(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)\"")
    def matcherVersionNumber = patternVersionNumber.matcher(manifestText)
    matcherVersionNumber.find()
    def versionName = Integer.parseInt(matcherVersionNumber.group(1))
    return "$versionName"
}

android {
    dexOptions {
        javaMaxHeapSize "4g"
    }
    signingConfigs {
        config {
            keyAlias 'sailorcast'
            keyPassword '123456'
            storeFile file('../sailorcast.jks')
            storePassword '123456'
        }
    }
    /*signingConfigs {
        release  {
            keyAlias 'china'
            keyPassword 'sky123'
            storeFile file('keystores/pro_key')
            storePassword 'sky123'
        }
    }*/
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.drovik.player"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName getVersionName()
        multiDexEnabled true
        ndk {
            abiFilters "armeabi"
        }
    }
    buildTypes {
        release {
            //signingConfig signingConfigs.config
            //minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
    }
    sourceSets {
        main {
            //jniLibs.srcDirs = ['libs']
            jniLibs.srcDir 'jniLibs'
       }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/beans.xml'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    flavorDimensions 'api'
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "DrovikPlayer_${versionName}.apk"
        }
    }
}

repositories{
    flatDir{
        dirs 'libs', '../CommonLibrary/libs'
    }
}

repositories {
    maven {url "http://4thline.org/m2"}
    maven {url "https://raw.githubusercontent.com/umeng/mvn-repo-umeng/master/repository" }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'com.android.support.test:runner:1.0.1'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    api 'org.fourthline.cling:cling-core:2.0.1'
    api 'org.fourthline.cling:cling-support:2.0.1'
    api 'org.eclipse.jetty:jetty-server:8.1.12.v20130726'
    api 'org.eclipse.jetty:jetty-servlet:8.1.12.v20130726'
    api 'org.eclipse.jetty:jetty-client:8.1.12.v20130726'
    api 'org.slf4j:slf4j-jdk14:1.7.5'
    api 'commons-lang:commons-lang:2.6'
    api 'com.squareup.okhttp:okhttp:2.1.0'
    api 'com.squareup.okhttp:okhttp-urlconnection:2.1.0'
    api 'com.nanohttpd:nanohttpd-webserver:2.1.1'
    //api 'com.google.android.exoplayer:exoplayer:r1.5.5'
    api 'com.umeng.analytics:analytics:latest.integration'
    api 'com.umeng:fb:5.1.0'
    api 'cn.pedant.sweetalert:library:1.3'
    api 'com.google.android.gms:play-services-appindexing:9.8.0'
    api project(':Audiorecord')
    api project(':decapi')
    implementation 'org.jsoup:jsoup:1.9.2'
    api 'com.shuyu:GSYVideoPlayer:6.0.1'
    api 'com.android.support:support-v4:27.+'
    api files('libs/Ad_Android_SDK.jar')
    api files('libs/GDTUnionSDK.4.19.574.min.jar')
}
